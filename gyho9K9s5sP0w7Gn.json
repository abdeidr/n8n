{
  "active": true,
  "connections": {
    "Schedule Cada 15 Días": {
      "main": [
        [
          {
            "node": "Leer Todos los Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar Solo Fríos": {
      "main": [
        [
          {
            "node": "Filtrar Leads con Timeout1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Sobre Leads": {
      "main": [
        [],
        [
          {
            "node": "OpenAI Generar Mensaje Valor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Generar Mensaje Valor": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Cada 24h": {
      "main": [
        [
          {
            "node": "Leer Todos los Leads2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar Leads con Timeout": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Timeouts": {
      "main": [
        [],
        [
          {
            "node": "Decidir Acción",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Decidir Acción": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 1s": {
      "main": [
        [
          {
            "node": "Loop Timeouts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Filtrar Solo Fríos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Actualizar Estado Recordatorio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leer Todos los Leads": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Estado Recordatorio1": {
      "main": [
        [
          {
            "node": "Wait 5s (evitar spam)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leer Todos los Leads2": {
      "main": [
        [
          {
            "node": "Filtrar Leads con Timeout",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto1": {
      "main": [
        [
          {
            "node": "Actualizar Estado Recordatorio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Execute a SQL query",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pasar a frio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pasar a frio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "pasar a frio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Estado Recordatorio": {
      "main": [
        [
          {
            "node": "Wait 1s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "pasar a frio": {
      "main": [
        [
          {
            "node": "Execute a SQL query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto2": {
      "main": [
        [
          {
            "node": "Actualizar Estado Recordatorio2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Estado Recordatorio2": {
      "main": [
        [
          {
            "node": "Wait 1s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 5s (evitar spam)": {
      "main": [
        [
          {
            "node": "Loop Sobre Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar Leads con Timeout1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Sobre Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Loop Timeouts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Enviar texto1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Enviar texto2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-15T10:51:25.680Z",
  "id": "gyho9K9s5sP0w7Gn",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "reactivacion centro atlas 24h y 15d",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 15
            }
          ]
        }
      },
      "id": "673b55d0-8af8-4157-abb3-6ca62a5fdbf8",
      "name": "Schedule Cada 15 Días",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        112,
        112
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "estado-frio",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.estado }}",
              "rightValue": "Frío"
            },
            {
              "id": "no-interesado",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.estado }}",
              "rightValue": "No_Interesado"
            },
            {
              "id": "fcd08bb0-6280-4261-b58b-d00c869f531c",
              "leftValue": "={{ $('Leer Todos los Leads').item.json.clasificacion }}",
              "rightValue": "Frío",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "bb18a65f-1a6d-40c1-a8fd-6d549dc65b27",
      "name": "Filtrar Solo Fríos",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        784,
        112
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c4b7311a-4d12-4010-8f43-f88398df09d5",
      "name": "Loop Sobre Leads",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1376,
        96
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=Genera mensaje de reactivación para paciente fisioterapia. Debe ser:\n- Útil y de valor (consejo, ejercicio, tip)\n- Relacionado con su problema: {{ $('Edit Fields').item.json.tipoDolor }}\n- Conversacional, no vendedor\n- Máximo 3 frases\n- Termina con pregunta abierta suave\n- Si no tienes el nombre del cliente no lo digas. Y mandale el mensaje sin mencionar su nombre.\nTemas posibles:\n- \"5 ejercicios clave para [problema]\"\n- \"Dieta antiinflamatoria en 3 pasos\"\n- \"Errores comunes que empeoran [problema]\"\n- \"¿Sabías que [dato curioso]?\"",
              "role": "system"
            },
            {
              "content": "=Problema inicial: {{ $('Edit Fields').item.json.tipoDolor }}\n\nGenera mensaje de valor."
            }
          ]
        },
        "options": {
          "maxTokens": 250,
          "temperature": 0.8
        }
      },
      "id": "edb28525-a044-411e-9e37-a37007ceee98",
      "name": "OpenAI Generar Mensaje Valor",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        1648,
        16
      ],
      "credentials": {}
    },
    {
      "parameters": {
        "content": "WF3 - Reactivación Leads Fríos",
        "height": 496,
        "width": 3600
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -48,
        -224
      ],
      "typeVersion": 1,
      "id": "8326908a-779d-437d-80d4-3dbbcd054e77",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "id": "1d00dddc-66f5-4320-9697-72fe1be8909a",
      "name": "Schedule Cada 24h",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        32,
        512
      ]
    },
    {
      "parameters": {
        "jsCode": "const ahora = new Date().getTime();\nconst TIMEOUT_HORAS = 24;\n\nconst debugInfo = $input.all().map(item => {\n  const lead = item.json;\n  const ultimaInteraccionStr = lead.ultima_interaccion || 'SIN FECHA';\n  const conversationStage = lead.conversation_stage;\n  const ultimaInteraccion = new Date(ultimaInteraccionStr).getTime();\n  const horasPasadas = isNaN(ultimaInteraccion) ? 'N/A' : (ahora - ultimaInteraccion) / (1000 * 60 * 60);\n  return {\n    telefono: lead.telefono,\n    conversationStage,\n    ultimaInteraccionStr,\n    horasPasadas\n  };\n});\n\nreturn debugInfo;\n"
      },
      "id": "953e0aba-393a-4fb9-bcaa-9f9837168fe6",
      "name": "Filtrar Leads con Timeout",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        480,
        512
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0c442da8-e66d-4241-ac3f-f7dc97520ab6",
      "name": "Loop Timeouts",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        912,
        496
      ]
    },
    {
      "parameters": {
        "jsCode": "const telefono = $input.first().json.telefono;\nconst nombre = $('Leer Todos los Leads2').first().json.nombre;\nconst stage = $input.first().json.conversationStage;\nconst ultimaInt =$input.first().json.ultimaInteraccionStr;\nconst problema = $input.first().json.problema_principal;\n\n// Calcular horas\nconst ahora = new Date().getTime();\nconst ultima = new Date(ultimaInt).getTime();\nconst diff = ahora - ultima;\nconst horas = diff / (1000 * 60 * 60);\n\nlet accion = 'sin_accion';\nlet nuevoStage = stage;\nlet msg = '';\n\n// Si pasó más de 1 hora y stage es 0-3\nif (horas > 1 && [0,1,2,3].includes(stage)) {\n  if (stage === 0) {\n    accion = 'enviar_m1';\n    nuevoStage = 1;\n    msg = `Hola, ¿pudiste ver mi mensaje anterior? Para ayudarte con tu $('Actualizar Estado Recordatorio2').first().json.problema_principal`;\n  } else if (stage === 1) {\n    accion = 'enviar_m2';\n    nuevoStage = 2;\n    msg = `Hola, entiendo que estás ocupado. ¿Te gustaría una valoración?`;\n  } else {\n    accion = 'pasar_frio';\n    nuevoStage = 3;\n    msg = `Hola, ¿pudiste ver mi mensaje anterior? Para ayudarte con tu $('Actualizar Estado Recordatorio2').first().json.problema_principal`;\n  }\n}\n\nreturn {\n  json: {\n    telefono: telefono,\n    nombre: nombre,\n    stage_actual: stage,\n    horas_sin_respuesta: horas.toFixed(1),\n    accion: accion,\n    nuevo_stage: nuevoStage,\n    mensaje: msg\n  }\n};\n"
      },
      "id": "48bc9c16-d589-4b63-b1e0-bbcdc0949bc2",
      "name": "Decidir Acción",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1424,
        512
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "8872bd35-29df-4883-8978-c8c4799ab380",
      "name": "Wait 1s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3360,
        544
      ],
      "webhookId": "REDACTED"
    },
    {
      "parameters": {
        "content": "WF4 - Gestión Timeouts",
        "height": 752,
        "width": 3568
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -32,
        192
      ],
      "typeVersion": 1,
      "id": "8ff2b8ad-2b31-447f-89a3-14f04cbbf900",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f2b79e2-424d-4e24-911b-1034ad9a2f38",
              "name": "numero",
              "value": "={{ $json.telefono }}",
              "type": "string"
            },
            {
              "id": "65a47c44-eb13-4d83-849f-d1686fbbe701",
              "name": "nombre",
              "value": "={{ $json.nombre }}",
              "type": "string"
            },
            {
              "id": "b2736784-dd43-48c5-8dbe-5ebeac46ae7d",
              "name": "estado",
              "value": "={{ $json.estado }}",
              "type": "string"
            },
            {
              "id": "a6046dea-1c00-46d2-8965-9e6af27e887d",
              "name": "tipoDolor",
              "value": "={{ $json.problema_principal }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        592,
        112
      ],
      "id": "22e3e0c7-6e06-4b5a-8b08-abdbfbfb922e",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "PRUEBA PERSONAL",
        "remoteJid": "={{ $('Edit Fields').item.json.numero }}",
        "messageText": "={{ $json.message.content }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2048,
        64
      ],
      "id": "ae48ed1f-f589-4f6b-9a6a-2884173f3032",
      "name": "Enviar texto",
      "credentials": {}
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM leads;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        368,
        112
      ],
      "id": "2ebd88d4-2948-44ea-a627-9ad36375b892",
      "name": "Leer Todos los Leads",
      "credentials": {}
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ultima_interaccion": "={{ $now }}",
            "telefono": "={{ $('Edit Fields').item.json.numero }}"
          },
          "matchingColumns": [
            "telefono"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mensaje_inicial",
              "displayName": "mensaje_inicial",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "estado",
              "displayName": "estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "clasificacion",
              "displayName": "clasificacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "problema_principal",
              "displayName": "problema_principal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "intentos_contacto",
              "displayName": "intentos_contacto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ultima_interaccion",
              "displayName": "ultima_interaccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultimo_mensaje",
              "displayName": "ultimo_mensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "necesita_llamada",
              "displayName": "necesita_llamada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "conversation_stage",
              "displayName": "conversation_stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "urgencia",
              "displayName": "urgencia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2256,
        64
      ],
      "id": "6aad70d0-d232-40ad-b96b-2a889e3a6e1d",
      "name": "Actualizar Estado Recordatorio1",
      "credentials": {}
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM leads;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        288,
        512
      ],
      "id": "40adcacb-cd4e-42df-89d4-b91dff8a754c",
      "name": "Leer Todos los Leads2",
      "credentials": {}
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "PRUEBA PERSONAL",
        "remoteJid": "={{ $('Execute a SQL query').item.json.telefono }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2784,
        304
      ],
      "id": "ff3a3bad-f4b3-4d0a-8675-2ab5476552dd",
      "name": "Enviar texto1",
      "credentials": {}
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.stage_actual.toString() }}",
                    "rightValue": "=0",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "07987113-ef2c-4604-87b7-b4941a12a85f"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6c7f592a-3da9-459a-bd7c-2f954808b699",
                    "leftValue": "={{ $json.stage_actual.toString() }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "259f0170-485d-4be2-949c-1e8f95da9022",
                    "leftValue": "={{ $json.stage_actual.toString() }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "50509cde-d830-4462-86e6-3b8e01c0c9bb",
                    "leftValue": "={{ $json.stage_actual.toString() }}",
                    "rightValue": "3",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        1632,
        464
      ],
      "id": "be959e5a-1cb5-4508-8663-6ca4b811440c",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_stage": "={{ $('Switch').item.json.nuevo_stage }}",
            "telefono": "={{ $('Switch').item.json.telefono }}",
            "ultimo_mensaje": "={{ $('Switch').item.json.mensaje }}",
            "ultima_interaccion": "={{ $now }}"
          },
          "matchingColumns": [
            "telefono"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mensaje_inicial",
              "displayName": "mensaje_inicial",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "clasificacion",
              "displayName": "clasificacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "problema_principal",
              "displayName": "problema_principal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "intentos_contacto",
              "displayName": "intentos_contacto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ultima_interaccion",
              "displayName": "ultima_interaccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultimo_mensaje",
              "displayName": "ultimo_mensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "necesita_llamada",
              "displayName": "necesita_llamada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "conversation_stage",
              "displayName": "conversation_stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "urgencia",
              "displayName": "urgencia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Pago_Es_Enviado",
              "displayName": "Pago_Es_Enviado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3056,
        320
      ],
      "id": "29f532fe-51bb-4d89-8673-5f677e6cda53",
      "name": "Actualizar Estado Recordatorio",
      "credentials": {}
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_stage": "={{ $('Switch').item.json.nuevo_stage }}",
            "telefono": "={{ $('Switch').item.json.telefono }}",
            "ultimo_mensaje": "={{ $('Switch').item.json.mensaje }}",
            "ultima_interaccion": "={{ $now }}",
            "clasificacion": "Frio"
          },
          "matchingColumns": [
            "telefono"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mensaje_inicial",
              "displayName": "mensaje_inicial",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fuente",
              "displayName": "fuente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "fecha_captacion",
              "displayName": "fecha_captacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "estado",
              "displayName": "estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "clasificacion",
              "displayName": "clasificacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "razon_clasificacion",
              "displayName": "razon_clasificacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "problema_principal",
              "displayName": "problema_principal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "intentos_contacto",
              "displayName": "intentos_contacto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ultima_interaccion",
              "displayName": "ultima_interaccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultimo_mensaje",
              "displayName": "ultimo_mensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "necesita_llamada",
              "displayName": "necesita_llamada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "conversation_stage",
              "displayName": "conversation_stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "urgencia",
              "displayName": "urgencia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1840,
        560
      ],
      "id": "1d13ff74-1d0d-4c83-a083-e4108e131233",
      "name": "pasar a frio",
      "credentials": {}
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "PRUEBA PERSONAL",
        "remoteJid": "={{ $('Execute a SQL query1').item.json.telefono }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2816,
        576
      ],
      "id": "fcf2742f-1d79-4246-a211-715d07c73a45",
      "name": "Enviar texto2",
      "credentials": {}
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_stage": "={{ $('Switch').item.json.nuevo_stage }}",
            "telefono": "={{ $('Switch').item.json.telefono }}",
            "ultimo_mensaje": "={{ $('Switch').item.json.mensaje }}",
            "ultima_interaccion": "={{ $now }}"
          },
          "matchingColumns": [
            "telefono"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "mensaje_inicial",
              "displayName": "mensaje_inicial",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "clasificacion",
              "displayName": "clasificacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "problema_principal",
              "displayName": "problema_principal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "intentos_contacto",
              "displayName": "intentos_contacto",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "ultima_interaccion",
              "displayName": "ultima_interaccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "ultimo_mensaje",
              "displayName": "ultimo_mensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "necesita_llamada",
              "displayName": "necesita_llamada",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "conversation_stage",
              "displayName": "conversation_stage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "urgencia",
              "displayName": "urgencia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Pago_Es_Enviado",
              "displayName": "Pago_Es_Enviado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3040,
        576
      ],
      "id": "693f1fd0-ba9f-4aeb-9d1d-aff9639b3830",
      "name": "Actualizar Estado Recordatorio2",
      "credentials": {}
    },
    {
      "parameters": {},
      "id": "f4de5b42-767d-42a2-b59f-5c9454e48b61",
      "name": "Wait 5s (evitar spam)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2688,
        96
      ],
      "webhookId": "REDACTED"
    },
    {
      "parameters": {
        "jsCode": "const ahora = new Date().getTime();\nconst TIMEOUT_HORAS = 24;\n\nconst debugInfo = $input.all().map(item => {\n  const lead = item.json;\n  const ultimaInteraccionStr =  $('Leer Todos los Leads').first().json.ultima_interaccion|| 'SIN FECHA';\n  const conversationStage = $('Leer Todos los Leads').first().json.conversation_stage;\n  const ultimaInteraccion = new Date(ultimaInteraccionStr).getTime();\n  const horasPasadas = isNaN(ultimaInteraccion) ? 'N/A' : (ahora - ultimaInteraccion) / (1000 * 60 * 60);\n  return {\n    telefono: lead.telefono,\n    conversationStage,\n    ultimaInteraccionStr,\n    horasPasadas\n  };\n});\n\nreturn debugInfo;\n"
      },
      "id": "5f6cfc3a-011f-498e-ab67-6cf1a6687873",
      "name": "Filtrar Leads con Timeout1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        928,
        112
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ef23b1dd-7fc0-4e9a-8b69-77812f5c9552",
              "leftValue": "={{ $json.horasPasadas }}",
              "rightValue": 360,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1136,
        112
      ],
      "id": "a7836e54-9f36-4557-841c-710834960469",
      "name": "Filter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2509d4f6-c206-4bef-ac35-c57d98c7c84b",
              "leftValue": "={{ $json.horasPasadas }}",
              "rightValue": 24,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        688,
        512
      ],
      "id": "37d8cebb-71a4-4402-9000-95a6cd292ee7",
      "name": "Filter1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Eres un asistente virtual empático de una clínica de osteopatía especializado en reactivar conversaciones que llevan 24 horas sin respuesta y que es es primer mensasje enviado, es decir que todavía no han interectuado.",
        "options": {
          "systemMessage": "=# AGENTE DE SEGUIMIENTO - OSTEOPATÍA (24H)\n\n## TU ROL\nEres un asistente virtual empático de una clínica de osteopatía especializado en reactivar conversaciones que llevan 24 horas sin respuesta. Tu misión es continuar la conversación de forma natural, sin parecer insistente, utilizando el contexto previo del paciente.\n\n---\n\n## DATOS DEL PACIENTE DISPONIBLES\nTienes acceso a:\n- Teléfono: {{ $json.telefono }}\n- Nombre: {{ $json.nombre }}\n- Problema principal: {{ $json.problema_principal }}\n- Score: {{ $json.score }}\n- Conversation Stage: {{ $json.conversation_stage }}\n- Última interacción: {{ $json.ultima_interaccion }}\n- Último mensaje: {{ $json.ultimo_mensaje }}\n- Clasificación: {{ $json.clasificacion }}\n- Urgencia: {{ $json.urgencia }}\n\n---\n\n## ESTRATEGIA DE SEGUIMIENTO SEGÚN STAGE\n\n### Stage 0 (Sin problema identificado)\nObjetivo: Reabrir conversación con valor\n\nGenera mensaje que:\n- Mencione un beneficio específico de la osteopatía\n- Muestre interés genuino sin presionar\n- Evite repetir exactamente el saludo inicial\n\nEjemplo de estructura:\nHola de nuevo. Espero que tu [momento del día] vaya bien. ¿En qué molestia específica podemos ayudarte?\n\n---\n\n### Stage 1 (Problema identificado, falta tiempo)\nObjetivo: Retomar pregunta de duración con contexto\n\nContexto disponible:  \nProblema: {{ $json.problema_principal }}\n\nGenera mensaje que:\n- Referencie el problema que mencionó\n- Aporte un dato de valor sobre su condición\n- Retome la pregunta de tiempo de forma natural\n\nEjemplo de estructura:\nHola de nuevo. El [problema] que mencionas puede tener varias causas según el tiempo de evolución. ¿Hace cuánto exactamente tienes esta molestia?\n\n---\n\n### Stage 2 (Problema + Tiempo, falta intención)\nObjetivo: Evaluar disposición de solución con empatía\n\nContexto disponible:  \nProblema: {{ $json.problema_principal }}  \nTiempo: (inferido del historial si está en base de datos)\n\nGenera mensaje que:\n- Valide su situación con empatía\n- Presente la solución como ayuda, no venta\n- Pregunte sobre su disposición actual\n\nEjemplo de estructura:\nEntiendo. El [problema] después de [tiempo] merece atención profesional. ¿Ya estás considerando tratarlo o aún estás evaluando opciones?\n\n---\n\n### Stage 3 (Datos completos, no respondió)\nObjetivo: Enviar recordatorio suave con incentivo\n\nContexto disponible:  \n- Problema: {{ $json.problema_principal }}\n- Score: {{ $json.score }}\n- Urgencia: {{ $json.urgencia }}\n\nGenera mensaje que:\n- Recuerde brevemente su caso\n- Ofrezca un beneficio concreto (descuento, urgencia limitada)\n- Facilite el siguiente paso (enlace, disponibilidad)\n\nEjemplo de estructura:\nHola. Vi que estabas interesado en solucionar tu [problema]. Esta semana tenemos disponibilidad para evaluaciones iniciales. ¿Te gustaría agendar?\n\n---\n\n## REGLAS DE COMUNICACIÓN\n\n### Tono y Estilo:\n- Natural y conversacional, como retomar una charla pausada\n- Empático pero no desesperado\n- Máximo 3 líneas por mensaje\n- Usa el nombre del paciente si está disponible (evita \"cliente\" o términos genéricos)\n- Un emoji máximo por mensaje\n\n### Contextualización:\n- SIEMPRE referencia el problema específico del paciente\n- NUNCA repitas textualmente el último mensaje enviado\n- Si tienen score alto (>70), sé más directo con la acción\n- Si tienen urgencia alta, menciona disponibilidad inmediata\n\n### Personalización según datos:\n- Score bajo (<40): Ofrece información educativa\n- Score medio (40-70): Refuerza beneficios y facilita decisión\n- Score alto (>70): Llama a acción directa (enlace, horarios)\n\n---\n\n## NO HAGAS\n- Enviar el mismo mensaje genérico a todos\n- Parecer robot o usar frases corporativas\n- Presionar o sonar desesperado\n- Inventar datos del paciente\n- Hacer múltiples preguntas seguidas\n- Mencionar el sistema de puntuación o stages\n- Usar lenguaje de venta agresiva\n\n---\n\n## EJEMPLOS SEGÚN CONTEXTO\n\n### Ejemplo 1 - Stage 1 con problema específico\nDatos:  \n- problema_principal: \"dolor lumbar\"\n- stage: 1\n- ultimo_mensaje: \"Cuéntame, ¿qué molestia te trae?\"\n\nMensaje generado:\nHola de nuevo. El dolor lumbar puede tener distintas causas según su duración. ¿Hace cuánto tiempo lo tienes?\n\n---\n\n### Ejemplo 2 - Stage 2 con urgencia alta\nDatos:  \n- problema_principal: \"ciática\"\n- stage: 2\n- urgencia: \"alta\"\n- score: 75\n\nMensaje generado:\nHola. La ciática suele empeorar sin tratamiento. Tenemos disponibilidad esta semana para evaluarte. ¿Te interesa agendar?\n\n---\n\n### Ejemplo 3 - Stage 3 lead tibio\nDatos:  \n- problema_principal: \"contractura cervical\"\n- stage: 3\n- score: 55\n- clasificacion: \"Tibio\"\n\nMensaje generado:\nHola. Para tu contractura cervical, esta semana tenemos espacios en mañana o tarde. ¿Algún horario te viene mejor?\n\n---\n\n## INSTRUCCIONES FINALES\n\n1. Analiza el contexto del paciente (stage, problema, score)\n2. Genera un mensaje único adaptado a su situación\n3. Mantén el tono cálido pero profesional\n4. Facilita el siguiente paso según su nivel de interés\n5. Actualiza conversation_stage si aplica (por ejemplo, si reinicias flujo)\n\nIMPORTANTE: Este mensaje debe sentirse como la continuación natural de una conversación, no como un recordatorio automático.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2400,
        288
      ],
      "id": "70953ddf-9938-4e88-95b5-5a90685ac1ef",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2400,
        448
      ],
      "id": "dc824d9d-f5ae-4907-8ac3-f4bbff7a41f2",
      "name": "OpenAI Chat Model",
      "credentials": {}
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.telefono }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2480,
        448
      ],
      "id": "07465d59-04c5-4135-9f72-691ef4872e77",
      "name": "Postgres Chat Memory",
      "credentials": {}
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM leads\nWHERE telefono = '{{ $json.telefono }}';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1616,
        272
      ],
      "id": "8516b26e-9609-4fb6-96ee-2d87a7651453",
      "name": "Execute a SQL query",
      "credentials": {}
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Eres un asistente virtual empático de una clínica de osteopatía especializado en reactivar conversaciones que llevan 24 horas sin respuesta.",
        "options": {
          "systemMessage": "=# AGENTE DE SEGUIMIENTO - OSTEOPATÍA (24H)\n\n## TU ROL\nEres un asistente virtual empático de una clínica de osteopatía especializado en reactivar conversaciones que llevan 24 horas sin respuesta. Tu misión es continuar la conversación de forma natural, sin parecer insistente, utilizando el contexto previo del paciente.\n\n---\n\n## DATOS DEL PACIENTE DISPONIBLES\nTienes acceso a:\n- Teléfono: {{ $json.telefono }}\n- Nombre: {{ $json.nombre }}\n- Problema principal: {{ $json.problema_principal }}\n- Score: {{ $json.score }}\n- Conversation Stage: {{ $json.conversation_stage }}\n- Última interacción: {{ $json.ultima_interaccion }}\n- Último mensaje: {{ $json.ultimo_mensaje }}\n- Clasificación: {{ $json.clasificacion }}\n- Urgencia: {{ $json.urgencia }}\n\n---\n\n## ESTRATEGIA DE SEGUIMIENTO SEGÚN STAGE\n\n### Stage 0 (Sin problema identificado)\nObjetivo: Reabrir conversación con valor\n\nGenera mensaje que:\n- Mencione un beneficio específico de la osteopatía\n- Muestre interés genuino sin presionar\n- Evite repetir exactamente el saludo inicial\n\nEjemplo de estructura:\nHola de nuevo. Espero que tu [momento del día] vaya bien. ¿En qué molestia específica podemos ayudarte?\n\n---\n\n### Stage 1 (Problema identificado, falta tiempo)\nObjetivo: Retomar pregunta de duración con contexto\n\nContexto disponible:  \nProblema: {{ $json.problema_principal }}\n\nGenera mensaje que:\n- Referencie el problema que mencionó\n- Aporte un dato de valor sobre su condición\n- Retome la pregunta de tiempo de forma natural\n\nEjemplo de estructura:\nHola de nuevo. El [problema] que mencionas puede tener varias causas según el tiempo de evolución. ¿Hace cuánto exactamente tienes esta molestia?\n\n---\n\n### Stage 2 (Problema + Tiempo, falta intención)\nObjetivo: Evaluar disposición de solución con empatía\n\nContexto disponible:  \nProblema: {{ $json.problema_principal }}  \nTiempo: (inferido del historial si está en base de datos)\n\nGenera mensaje que:\n- Valide su situación con empatía\n- Presente la solución como ayuda, no venta\n- Pregunte sobre su disposición actual\n\nEjemplo de estructura:\nEntiendo. El [problema] después de [tiempo] merece atención profesional. ¿Ya estás considerando tratarlo o aún estás evaluando opciones?\n\n---\n\n### Stage 3 (Datos completos, no respondió)\nObjetivo: Enviar recordatorio suave con incentivo\n\nContexto disponible:  \n- Problema: {{ $json.problema_principal }}\n- Score: {{ $json.score }}\n- Urgencia: {{ $json.urgencia }}\n\nGenera mensaje que:\n- Recuerde brevemente su caso\n- Ofrezca un beneficio concreto (descuento, urgencia limitada)\n- Facilite el siguiente paso (enlace, disponibilidad)\n\nEjemplo de estructura:\nHola. Vi que estabas interesado en solucionar tu [problema]. Esta semana tenemos disponibilidad para evaluaciones iniciales. ¿Te gustaría agendar?\n\n---\n\n## REGLAS DE COMUNICACIÓN\n\n### Tono y Estilo:\n- Natural y conversacional, como retomar una charla pausada\n- Empático pero no desesperado\n- Máximo 3 líneas por mensaje\n- Usa el nombre del paciente si está disponible (evita \"cliente\" o términos genéricos)\n- Un emoji máximo por mensaje\n\n### Contextualización:\n- SIEMPRE referencia el problema específico del paciente\n- NUNCA repitas textualmente el último mensaje enviado\n- Si tienen score alto (>70), sé más directo con la acción\n- Si tienen urgencia alta, menciona disponibilidad inmediata\n\n### Personalización según datos:\n- Score bajo (<40): Ofrece información educativa\n- Score medio (40-70): Refuerza beneficios y facilita decisión\n- Score alto (>70): Llama a acción directa (enlace, horarios)\n\n---\n\n## NO HAGAS\n- Enviar el mismo mensaje genérico a todos\n- Parecer robot o usar frases corporativas\n- Presionar o sonar desesperado\n- Inventar datos del paciente\n- Hacer múltiples preguntas seguidas\n- Mencionar el sistema de puntuación o stages\n- Usar lenguaje de venta agresiva\n\n---\n\n## EJEMPLOS SEGÚN CONTEXTO\n\n### Ejemplo 1 - Stage 1 con problema específico\nDatos:  \n- problema_principal: \"dolor lumbar\"\n- stage: 1\n- ultimo_mensaje: \"Cuéntame, ¿qué molestia te trae?\"\n\nMensaje generado:\nHola de nuevo. El dolor lumbar puede tener distintas causas según su duración. ¿Hace cuánto tiempo lo tienes?\n\n---\n\n### Ejemplo 2 - Stage 2 con urgencia alta\nDatos:  \n- problema_principal: \"ciática\"\n- stage: 2\n- urgencia: \"alta\"\n- score: 75\n\nMensaje generado:\nHola. La ciática suele empeorar sin tratamiento. Tenemos disponibilidad esta semana para evaluarte. ¿Te interesa agendar?\n\n---\n\n### Ejemplo 3 - Stage 3 lead tibio\nDatos:  \n- problema_principal: \"contractura cervical\"\n- stage: 3\n- score: 55\n- clasificacion: \"Tibio\"\n\nMensaje generado:\nHola. Para tu contractura cervical, esta semana tenemos espacios en mañana o tarde. ¿Algún horario te viene mejor?\n\n---\n\n## INSTRUCCIONES FINALES\n\n1. Analiza el contexto del paciente (stage, problema, score)\n2. Genera un mensaje único adaptado a su situación\n3. Mantén el tono cálido pero profesional\n4. Facilita el siguiente paso según su nivel de interés\n5. Actualiza conversation_stage si aplica (por ejemplo, si reinicias flujo)\n\nIMPORTANTE: Este mensaje debe sentirse como la continuación natural de una conversación, no como un recordatorio automático.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        2544,
        576
      ],
      "id": "1d0bcd6e-bb83-4ef0-a7e2-4dd10a00ada3",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM leads\nWHERE telefono = '{{ $json.telefono }}';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2016,
        576
      ],
      "id": "d479c239-8f9e-4e53-b8a5-fea1edb36098",
      "name": "Execute a SQL query1",
      "credentials": {}
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2608,
        800
      ],
      "id": "a42be1f8-edbf-4d49-947a-8f82900bfd25",
      "name": "OpenAI Chat Model1",
      "credentials": {}
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.telefono }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2752,
        784
      ],
      "id": "95fd97a6-eb7e-40e9-a388-4c1222ca55be",
      "name": "Postgres Chat Memory1",
      "credentials": {}
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cad282f0-d616-4204-b582-9891458b3d8c",
              "leftValue": "={{ $json.Pago_Es_Enviado }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1808,
        272
      ],
      "id": "dd0a5df7-fd5b-46d5-b346-2cdf477c3809",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cad282f0-d616-4204-b582-9891458b3d8c",
              "leftValue": "={{ $json.Pago_Es_Enviado }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2208,
        576
      ],
      "id": "64c7e3c8-1706-44dc-a71b-6dd10e3f6d4d",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2432,
        704
      ],
      "id": "2ad88543-2e88-46bc-8064-811f332718a1",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2064,
        384
      ],
      "id": "ee1b3848-9034-4350-a0c2-a8dc312171b9",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "content": "## Falta mandar los pdfs.\n",
        "height": 96,
        "width": 288
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1664,
        -336
      ],
      "typeVersion": 1,
      "id": "f32a28eb-1f7c-46c0-a2d1-a54b30443cd6",
      "name": "Sticky Note"
    }
  ],
  "origin": "n8n",
  "pinData": {
    "Schedule Cada 24h": [
      {
        "json": {
          "timestamp": "2025-10-30T22:00:49.022+01:00",
          "Readable date": "October 30th 2025, 10:00:49 pm",
          "Readable time": "10:00:49 pm",
          "Day of week": "Thursday",
          "Year": "2025",
          "Month": "October",
          "Day of month": "30",
          "Hour": "22",
          "Minute": "00",
          "Second": "49",
          "Timezone": "Europe/Madrid (UTC+01:00)"
        }
      }
    ]
  },
  "repo": {
    "owner": "abdeidr",
    "name": "n8n"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-15T10:51:25.688Z",
      "updatedAt": "2025-10-15T10:51:25.688Z",
      "role": "workflow:owner",
      "workflowId": "gyho9K9s5sP0w7Gn",
      "projectId": "xdZYvePgLSibegaD"
    }
  ],
  "staticData": {
    "node:Schedule Cada 15 Días": {
      "recurrenceRules": [
        290
      ]
    },
    "node:Schedule Cada 24h": {
      "recurrenceRules": [
        0
      ]
    }
  },
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-10-30T21:35:44.000Z",
  "versionId": "dadf3b5b-98f4-4bfd-a2b3-b48cae4b5c44"
}